services:
  kafka:
    image: apache/kafka:3.7.2
    container_name: kafka
    ports:
      - "9092:9092"
      - "9404:9404" # JMX Prometheus exporter port
    environment:
      # KRaft (sem ZooKeeper)
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"

      # Listeners internos e externos
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_LISTENERS: "PLAINTEXT://:19092,CONTROLLER://:9093,PLAINTEXT_HOST://:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:19092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"

      # Qualidade de vida p/ single-broker
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
      # ID fixo do cluster (pode manter este mesmo)
      CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"
      # Removido temporariamente o KAFKA_OPTS com JMX para resolver o problema
    healthcheck:
      test: [ "CMD", "bash", "-lc", "kafka-topics.sh --version >/dev/null 2>&1" ]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - kafka_data:/tmp/kraft-combined-logs
      - ./jmx/jmx_prometheus_javaagent.jar:/opt/jmx/jmx_prometheus_javaagent.jar:ro
      - ./jmx/kafka-jmx.yml:/opt/jmx/kafka-jmx.yml:ro
    networks:
      - kafka-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:19092
    networks:
      - kafka-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    depends_on:
      - kafka
    networks:
      - kafka-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/:ro
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/:ro
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - kafka-network

  kcat:
    image: edenhill/kcat:1.7.1
    container_name: kcat
    depends_on:
      - kafka
    entrypoint: [ "sh","-lc","tail -f /dev/null" ]
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge

volumes:
  kafka_data:
  grafana-data:
  prometheus-data:
