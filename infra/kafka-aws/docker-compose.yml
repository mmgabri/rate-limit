services:
  kafka:
    image: apache/kafka:3.7.2
    ports:
      - "9092:9092"   # EXTERNAL (acesso fora do bridge Docker, ex.: ECS)
    environment:
      # KRaft (sem ZooKeeper)
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"

      # Listeners/protocolos
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_LISTENERS: "INTERNAL://:19092,CONTROLLER://:9093,EXTERNAL://:9092"

      # Endereços anunciados
      # INTERNAL: containers do mesmo docker network
      # EXTERNAL: IP PRIVADO da EC2 (alcançável pelas tasks ECS na VPC)
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:19092,EXTERNAL://172.31.30.51:9092"

      # Inter-broker via INTERNAL
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"

      # QoL single-broker
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"

      # Cluster ID fixo
      CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"

    healthcheck:
      test: [ "CMD", "bash", "-lc", "kafka-topics.sh --version >/dev/null 2>&1" ]
      interval: 10s
      timeout: 5s
      retries: 10

    volumes:
      - kafka_data:/tmp/kraft-combined-logs

    networks:
      - kafka-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:19092
    networks:
      - kafka-network

  kcat:
    image: edenhill/kcat:1.7.1
    depends_on:
      - kafka
    entrypoint: [ "sh","-lc","tail -f /dev/null" ]
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge

volumes:
  kafka_data:
